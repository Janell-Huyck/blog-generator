# Generated by Django 4.2.1 on 2023-05-29 23:09

import blog_generator.models.author
import blog_generator.models.category
import blog_generator.models.comment
import blog_generator.models.commenter
import blog_generator.models.flag
import blog_generator.models.post
import blog_generator.models.tag
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('bio', models.CharField(blank=True, max_length=5000)),
                ('profile_picture', models.ImageField(blank=True, upload_to='profile_pictures')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('home_page', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='AuthorStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(blank=True, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.CharField(max_length=500)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('likes', models.IntegerField(default=0)),
                ('flagged', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Commenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CommenterStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CommentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FlagCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=10, unique=True)),
                ('severity', models.IntegerField(default=3)),
            ],
        ),
        migrations.CreateModel(
            name='PostStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TagStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('status', models.ForeignKey(default=blog_generator.models.tag.get_default_tag_status, on_delete=django.db.models.deletion.CASCADE, to='blog_generator.tagstatus')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, unique=True)),
                ('content', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('image1', models.ImageField(blank=True, upload_to='post_images')),
                ('image2', models.ImageField(blank=True, upload_to='post_images')),
                ('image3', models.ImageField(blank=True, upload_to='post_images')),
                ('image4', models.ImageField(blank=True, upload_to='post_images')),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('featured', models.BooleanField(default=False)),
                ('views', models.IntegerField(default=0)),
                ('likes', models.IntegerField(default=0)),
                ('shares', models.IntegerField(default=0)),
                ('flagged', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog_generator.author')),
                ('category', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='blog_generator.category')),
                ('comments', models.ManyToManyField(blank=True, related_name='comments', to='blog_generator.comment')),
                ('status', models.ForeignKey(default=blog_generator.models.post.get_default_post_status, on_delete=django.db.models.deletion.CASCADE, to='blog_generator.poststatus')),
                ('tags', models.ManyToManyField(blank=True, to='blog_generator.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Flag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blog_generator.comment')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blog_generator.post')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog_generator.commenter')),
                ('type', models.ForeignKey(default=blog_generator.models.flag.get_default_flag_category, on_delete=django.db.models.deletion.CASCADE, to='blog_generator.flagcategory')),
            ],
        ),
        migrations.AddField(
            model_name='commenter',
            name='status',
            field=models.ForeignKey(default=blog_generator.models.commenter.get_default_commenter_status, on_delete=django.db.models.deletion.CASCADE, to='blog_generator.commenterstatus'),
        ),
        migrations.AddField(
            model_name='comment',
            name='commenter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog_generator.commenter'),
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog_generator.post'),
        ),
        migrations.AddField(
            model_name='comment',
            name='status',
            field=models.ForeignKey(default=blog_generator.models.comment.get_default_comment_status, on_delete=django.db.models.deletion.CASCADE, to='blog_generator.commentstatus'),
        ),
        migrations.AddField(
            model_name='category',
            name='status',
            field=models.ForeignKey(default=blog_generator.models.category.get_default_category_status, on_delete=django.db.models.deletion.CASCADE, to='blog_generator.categorystatus'),
        ),
        migrations.AddField(
            model_name='author',
            name='status',
            field=models.ForeignKey(default=blog_generator.models.author.get_default_author_status, on_delete=django.db.models.deletion.CASCADE, to='blog_generator.authorstatus'),
        ),
    ]
